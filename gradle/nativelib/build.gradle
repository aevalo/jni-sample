plugins {
  id 'cpp-library'
}

group = 'org.example.nativelib'
version = '0.1'

library {
  baseName = 'SampleNative'
  targetMachines = [
      machines.linux.x86_64,
      machines.windows.x86_64,
      machines.macOS.x86_64
  ]
  linkage = [Linkage.SHARED]
}

tasks.withType(CCompile).configureEach {
  compilerArgs.add '-fPIC'
  includes.from("${System.getenv('JAVA_HOME')}/include")
  includes.from("${System.getenv('JAVA_HOME')}/include/linux")

  compilerArgs.addAll toolChain.map { toolChain ->
    if (toolChain in [ Gcc, Clang ]) {
      return ['-O2', '-fno-access-control', '-std=c++14']
    } else if (toolChain in VisualCpp) {
      return ['/Zi', '/TC', '/std=c++14']
    }
    return []
  }
}
